/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.valerian.prolan.grade;

import id.valerian.prolan.connection.db_connection;
import static id.valerian.prolan.user.User.containsNumbers;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Valerian
 */
public class Grade extends javax.swing.JInternalFrame {

    ResultSet rs;
    boolean invalid;
    String idSelected;

    /**
     * Creates new form Grade
     */
    public Grade() {
        initComponents();
        show_grades();
        try {
            String sql = "SELECT kode_detail_pelajaran from detail_pelajaran";
            java.sql.Connection conn = (Connection) db_connection.configDB();
            Statement st = conn.createStatement();
            rs = st.executeQuery(sql);
            cbKdMapel.addItem("-Pilihan-");
            while (rs.next()) {
                cbKdMapel.addItem(rs.getString("kode_detail_pelajaran"));
            }
            String sql2 = "SELECT kode_semester from semester";
            rs = st.executeQuery(sql2);
            cbKS.addItem("-Pilihan-");
            while (rs.next()) {
                cbKS.addItem(rs.getString("kode_semester"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        setKeterangan();
    }

    private void show_grades() {
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("No");
        model.addColumn("Kode Smst");
        model.addColumn("Kode MP");
        model.addColumn("Mata Pelajaran");
        model.addColumn("NISN");
        model.addColumn("Nama");
        model.addColumn("N_Pengetahuan");
        model.addColumn("N_Keterampilan");
        model.addColumn("N_Spiritual");
        model.addColumn("Keterangan");
        try {
            String sql = null;
            int data_count = 0;
            if (cbSearch.getModel().getSelectedItem().equals("Nama Siswa")) {
                sql = "SELECT * FROM detail_pelajaran,nilai,guru,semester,siswa,pelajaran "
                    + "WHERE siswa.nisn = nilai.nisn AND semester.kode_semester = nilai.kode_semester AND detail_pelajaran.kode_detail_pelajaran = nilai.kode_detail_pelajaran "
                    + "AND detail_pelajaran.kode_pelajaran = pelajaran.kode_pelajaran AND detail_pelajaran.nik = guru.nik AND siswa.nama LIKE '"+txtSearch.getText()+"%'";
            } else if (cbSearch.getModel().getSelectedItem().equals("Mata Pelajaran")) {
                sql = "SELECT * FROM detail_pelajaran,nilai,guru,semester,siswa,pelajaran "
                    + "WHERE siswa.nisn = nilai.nisn AND semester.kode_semester = nilai.kode_semester AND detail_pelajaran.kode_detail_pelajaran = nilai.kode_detail_pelajaran "
                    + "AND detail_pelajaran.kode_pelajaran = pelajaran.kode_pelajaran AND detail_pelajaran.nik = guru.nik AND pelajaran.mata_pelajaran LIKE '"+txtSearch.getText()+"%'";
            }
            java.sql.Connection conn = (Connection) db_connection.configDB();
            Statement st = conn.createStatement();
            rs = st.executeQuery(sql);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString("kode_nilai"), rs.getString("kode_semester"), rs.getString("kode_detail_pelajaran"), rs.getString("mata_pelajaran"), rs.getString("nisn"), rs.getString("siswa.nama"), rs.getString("nh_pengetahuan"), rs.getString("nh_keterampilan"), rs.getString("nh_spiritual"), rs.getString("keterangan")});
                data_count++;
            }
            tableGrade.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNISN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbKS = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cbKdMapel = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtMatPel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtPengajar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cbNP = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cbNK = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cbNS = new javax.swing.JComboBox<>();
        txtKeterangan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableGrade = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnCetakLaporan = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        cbSearch = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setTitle("Data Nilai Siswa");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Siswa"));

        txtNISN.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNISNFocusLost(evt);
            }
        });
        txtNISN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNISNKeyReleased(evt);
            }
        });

        jLabel2.setText("NISN");

        jLabel3.setText("Nama");

        txtNama.setEnabled(false);

        jLabel11.setText("Kode Semester");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNama)
                            .addComponent(txtNISN)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(cbKS, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbKS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNISN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Nilai"));

        jLabel6.setText("Kode Mata Pelajaran");

        cbKdMapel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbKdMapelItemStateChanged(evt);
            }
        });

        jLabel7.setText("Mata Pelajaran");

        txtMatPel.setEnabled(false);

        jLabel8.setText("Pengajar");

        txtPengajar.setEnabled(false);

        jLabel9.setText("Nilai Pengetahuan");

        jLabel10.setText("Keterangan");

        cbNP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        cbNP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNPItemStateChanged(evt);
            }
        });

        jLabel13.setText("Nilai Keterampilan");

        cbNK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B", "C", "D" }));
        cbNK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNKItemStateChanged(evt);
            }
        });

        jLabel14.setText("Nilai Spiritual");

        cbNS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SB", "B", "C", "K" }));
        cbNS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNSItemStateChanged(evt);
            }
        });

        txtKeterangan.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPengajar, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                    .addComponent(txtMatPel)
                    .addComponent(txtKeterangan)
                    .addComponent(cbNP, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbNK, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbNS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbKdMapel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbKdMapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtMatPel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPengajar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        tableGrade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableGrade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableGradeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableGrade);

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/id/valerian/prolan/images/add.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/id/valerian/prolan/images/edit.png"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/id/valerian/prolan/images/trash.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/id/valerian/prolan/images/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnCetakLaporan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/id/valerian/prolan/images/document.png"))); // NOI18N
        btnCetakLaporan.setText("Cetak Laporan");
        btnCetakLaporan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakLaporanActionPerformed(evt);
            }
        });

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/id/valerian/prolan/images/search.png"))); // NOI18N

        cbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nama Siswa", "Mata Pelajaran" }));
        cbSearch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSearchItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnAdd)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnEdit))
                                            .addComponent(btnCetakLaporan, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnReset)
                                            .addComponent(btnDelete))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnEdit)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCetakLaporan)
                            .addComponent(btnReset))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbKdMapelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbKdMapelItemStateChanged
        try {
            if (!cbKdMapel.getModel().getSelectedItem().equals("-Pilihan-")) {
                String sql = "SELECT pelajaran.mata_pelajaran,guru.nama FROM pelajaran,detail_pelajaran,guru WHERE pelajaran.kode_pelajaran = detail_pelajaran.kode_pelajaran AND guru.nik = detail_pelajaran.nik";
                java.sql.Connection conn = (Connection) db_connection.configDB();
                Statement st = conn.createStatement();
                rs = st.executeQuery(sql);
                if (rs.next()) {
                    txtMatPel.setText(rs.getString("mata_pelajaran"));
                    txtPengajar.setText(rs.getString("nama"));
                }
                setKeterangan();
            } else {
                txtMatPel.setText("");
                txtPengajar.setText("");
                txtKeterangan.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_cbKdMapelItemStateChanged

    private void tableGradeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableGradeMouseClicked
        btnAdd.setEnabled(false);
        btnEdit.setEnabled(true);
        btnDelete.setEnabled(true);
        TableModel model = tableGrade.getModel();
        int i = tableGrade.getSelectedRow();
        txtNISN.setEnabled(false);
        txtNISN.setText(model.getValueAt(i, 4).toString());
        cbKdMapel.getModel().setSelectedItem(model.getValueAt(i, 2).toString());
        cbNP.getModel().setSelectedItem(model.getValueAt(i, 6).toString());
        cbNK.getModel().setSelectedItem(model.getValueAt(i, 7).toString());
        cbNS.getModel().setSelectedItem(model.getValueAt(i, 8).toString());
        idSelected = model.getValueAt(i, 0).toString();
        cbKS.getModel().setSelectedItem(model.getValueAt(i, 1).toString());
        txtKeterangan.setText(model.getValueAt(i, 9).toString());
        getDetailStudents();
    }//GEN-LAST:event_tableGradeMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        invalid = checkField();
        if (!invalid) {
            try {
                int maxID = 0;
                String sqlmax = "SELECT MAX(kode_nilai) as max FROM nilai";
                java.sql.Connection conn1 = (Connection) db_connection.configDB();
                java.sql.PreparedStatement pst = conn1.prepareStatement(sqlmax);
                rs = pst.executeQuery();
                if (rs.next()) {
                    maxID = rs.getInt("max");
                }
                int maxIDnow = maxID + 1;
                String sql = "INSERT INTO `nilai` (`kode_nilai`, `NISN`, `Kode_Semester`, `Kode_Detail_Pelajaran`, `NA_Pengetahuan`, `NH_Pengetahuan`, `NA_Keterampilan`, `NH_Keterampilan`, `NH_Spiritual`, `Keterangan`) "
                            + "VALUES ('"+maxIDnow+"', '"+txtNISN.getText()+"', '"+cbKS.getModel().getSelectedItem().toString()+"', '"+cbKdMapel.getModel().getSelectedItem().toString()+"', '"+convertNilai(cbNP.getModel().getSelectedItem().toString())+"', '"+cbNP.getModel().getSelectedItem().toString()+"', '"+convertNilai(cbNK.getModel().getSelectedItem().toString())+"', '"+cbNK.getModel().getSelectedItem().toString()+"','"+cbNS.getModel().getSelectedItem().toString()+"','"+txtKeterangan.getText()+"')";
                java.sql.Connection conn = (Connection) db_connection.configDB();
                java.sql.PreparedStatement pst2 = conn.prepareStatement(sql);
                pst2.execute();
                JOptionPane.showMessageDialog(null, "Penyimpanan data nilai berhasil");
                resetField();
                resetTable();
                show_grades();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed
    
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        invalid = checkField();
        if (!invalid) {
            try {
                String sql = "UPDATE nilai SET kode_semester = '"+cbKS.getModel().getSelectedItem().toString()+"',kode_detail_pelajaran='"+cbKdMapel.getModel().getSelectedItem().toString()+"'"
                        + ",na_pengetahuan='"+convertNilai(cbNP.getModel().getSelectedItem().toString())+"',nh_pengetahuan='"+cbNP.getModel().getSelectedItem().toString()+"'"
                        + ",na_keterampilan='"+convertNilai(cbNK.getModel().getSelectedItem().toString())+"',nh_keterampilan='"+cbNK.getModel().getSelectedItem().toString()+"'"
                        + ",nh_spiritual='"+cbNS.getModel().getSelectedItem().toString()+"',keterangan='"+txtKeterangan.getText()+"' WHERE kode_nilai = '"+idSelected+"'";
                java.sql.Connection conn = (Connection) db_connection.configDB();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.executeUpdate();
                resetField();
                resetTable();
                show_grades();
                JOptionPane.showMessageDialog(null, "Data berhasil diubah!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int reply = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin untuk menghapus data berikut?", title, JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                String sql = "DELETE FROM nilai WHERE kode_nilai = '" + idSelected + "'";
                java.sql.Connection conn = (Connection) db_connection.configDB();
                java.sql.PreparedStatement pst = conn.prepareStatement(sql);
                pst.executeUpdate();
                resetField();
                resetTable();
                show_grades();
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        resetField();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnCetakLaporanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakLaporanActionPerformed
        try {
            HashMap parameter = new HashMap();
            parameter.put("tahun_ajaran", "");
            parameter.put("kelas", "");
            parameter.put("jurusan", "");
            parameter.put("nama_mapel", "");
            Connection conn = db_connection.configDB();
            File file = new File("src/id/valerian/prolan/report/reportGrades.jrxml");
            JasperDesign jasperDesign = JRXmlLoader.load(file);
            JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameter, conn);
            JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_btnCetakLaporanActionPerformed

    private void txtNISNFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNISNFocusLost
        if (!txtNISN.getText().equals("")) {
            getDetailStudents();
        }
    }//GEN-LAST:event_txtNISNFocusLost

    private void txtNISNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNISNKeyReleased
        Integer nipdLength = txtNISN.getText().length();
        String subStr = txtNISN.getText();
        if (nipdLength.compareTo(nipdLength - 1) > 0) {
            txtNama.setText("");
        }
        if (!txtNISN.getText().equals("")) {
            if (!containsNumbers(subStr)) {
                txtNISN.setText(subStr.substring(0, nipdLength - 1));
            } else {
                if (nipdLength.compareTo(10) > 0) {
                    txtNISN.setText(subStr.substring(0, nipdLength - 1));
                    JOptionPane.showMessageDialog(this, "Maksimal karakter NIPD hanya bisa 10!", "Pesan", JOptionPane.WARNING_MESSAGE);
                }
                if (nipdLength.compareTo(9) > 0) {
                    getDetailStudents();
                }
            }
        }
    }//GEN-LAST:event_txtNISNKeyReleased

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        show_grades();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void cbSearchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSearchItemStateChanged
        show_grades();
    }//GEN-LAST:event_cbSearchItemStateChanged

    private void cbNPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNPItemStateChanged
        setKeterangan();
    }//GEN-LAST:event_cbNPItemStateChanged

    private void cbNKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNKItemStateChanged
        setKeterangan();
    }//GEN-LAST:event_cbNKItemStateChanged

    private void cbNSItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNSItemStateChanged
        setKeterangan();
    }//GEN-LAST:event_cbNSItemStateChanged

    private void setKeterangan(){
        int NP = convertNilai(cbNP.getModel().getSelectedItem().toString());
        int NK = convertNilai(cbNK.getModel().getSelectedItem().toString());
        int NS = convertNilai(cbNS.getModel().getSelectedItem().toString());
        int average = (NP+NK+NS)/3;
        if(average > 1){
            txtKeterangan.setText("LULUS");
        }else{
            txtKeterangan.setText("TIDAK LULUS");
        } 
    }
    
    private int convertNilai(String NH){
        switch(NH){
            case "A": return 4;
            case "B": return 3;
            case "C": return 2;
            case "D": return 1;
            case "SB" : return 4;
            case "K" : return 1;
        }
        return 0;
    }
    private void resetField() {
        txtNISN.setEnabled(true);
        btnEdit.setEnabled(false);
        btnDelete.setEnabled(false);
        btnAdd.setEnabled(true);
        txtNISN.setText("");
        txtNama.setText("");
        txtPengajar.setText("");
        txtMatPel.setText("");
        txtKeterangan.setText("");
        cbKdMapel.setSelectedIndex(0);
        txtSearch.setText("");
        setKeterangan();
    }

    private void resetTable() {
        DefaultTableModel model = (DefaultTableModel) tableGrade.getModel();
        model.setRowCount(0);
    }

    private boolean checkField() {
        if (txtNISN.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "NIPD tidak boleh kosong", "Pesan", JOptionPane.WARNING_MESSAGE);
            txtNISN.requestFocus();
            return true;
        } else if (cbKdMapel.getModel().getSelectedItem().equals("-Pilihan")) {
            JOptionPane.showMessageDialog(null, "Kode Mata Pelajaran harus dipilih", "Pesan", JOptionPane.WARNING_MESSAGE);
            cbKdMapel.requestFocus();
            return true;
        } else if (cbKS.getModel().getSelectedItem().equals("-Pilihan")) {
            JOptionPane.showMessageDialog(null, "Kode Semester harus dipilih", "Pesan", JOptionPane.WARNING_MESSAGE);
            cbKS.requestFocus();
            return true;
        } 
        return false;
    }

    private void getDetailStudents() {
        try {
            String sql = "SELECT nama,kelas from siswa WHERE nisn = '"+txtNISN.getText()+"'";
            java.sql.Connection conn = (Connection) db_connection.configDB();
            Statement st = conn.createStatement();
            rs = st.executeQuery(sql);
            if (rs.next()) {
                txtNama.setText(rs.getString("nama"));
            } else {
                JOptionPane.showMessageDialog(null, "NIPD tidak ditemukan!");
                txtNISN.setText("");
                txtNISN.requestFocus(true);
                txtNama.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCetakLaporan;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cbKS;
    private javax.swing.JComboBox<String> cbKdMapel;
    private javax.swing.JComboBox<String> cbNK;
    private javax.swing.JComboBox<String> cbNP;
    private javax.swing.JComboBox<String> cbNS;
    private javax.swing.JComboBox<String> cbSearch;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableGrade;
    private javax.swing.JTextField txtKeterangan;
    private javax.swing.JTextField txtMatPel;
    private javax.swing.JTextField txtNISN;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtPengajar;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
